{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPL,EAAKa,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAMC,EAAaC,SAASjB,EAAKkB,SAASb,MAAMc,OAC1CC,EAAYH,SAASjB,EAAKkB,SAASG,KAAKF,OACxCG,EAAcL,SAASjB,EAAKkB,SAASK,OAAOJ,OAElD,GAAIH,EAAa,GAAKI,EAAY,GAAKE,EAAc,EACnDE,MAAM,qDAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EAAG,CAGvCtB,EAFiBsB,EAAI,EAEGT,EAAaI,EAAYK,GAC9CC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA9B,GAAS+B,OAAOC,QACd,qBAAoCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG7C2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAmCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAIzEL,EAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delayValue = parseInt(form.elements.delay.value);\n  const stepValue = parseInt(form.elements.step.value);\n  const amountValue = parseInt(form.elements.amount.value);\n\n  if (delayValue < 0 || stepValue < 0 || amountValue < 0) {\n    alert('Please enter positive values for all fields.');\n  } else {\n    for (let i = 0; i < amountValue; i += 1) {\n      const position = i + 1;\n\n      createPromise(position, delayValue + stepValue * i)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n  form.reset();\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","parseInt","elements","value","stepValue","step","amountValue","amount","alert","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.a8c7fc39.js.map"}